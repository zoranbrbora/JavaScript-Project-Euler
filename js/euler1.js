const questionBox = document.getElementsByClassName('js-question')[0];
const resultBox = document.getElementsByClassName('js-result')[0];

/* If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.*/

/*(function(){
  let question = 'Find the sum of all the multiples of 3 or 5 below 1000.';
  let multiples = [];
  let multiplesOfThree = [];
  let multiplesOfFive = [];

  function makeArrays(multiArray, num) {
    let multiplyNum;
    for (let i = 1; i < 350; i++) {
      multiplyNum = num * i;
      if (multiplyNum < 1000) {
        multiArray.push(multiplyNum);
      } else {
        break;
      }
    }
    return multiArray;
  }

  multiplesOfThree = makeArrays(multiplesOfThree, 3);
  multiplesOfFive = makeArrays(multiplesOfFive, 5);

  function sumOfMultiples(multiArray) {
    let sumOfMulti = multiArray.reduce((a, b) => {
      return a + b;
    });
    return sumOfMulti;
  }
  let sumOfThree = sumOfMultiples(multiplesOfThree);
  let sumOfFive = sumOfMultiples(multiplesOfFive);

  multiples = multiplesOfThree.concat(multiplesOfFive);
  multiples.sort(function(a, b){return a - b});

  multiples = multiples.toString();
  multiples = multiples.replace(/,/g, ' ');

  questionBox.innerHTML = question;
  resultBox.innerHTML = `Sum of multiples of three: ${sumOfThree}.
  <hr />
  Sum of multiples of five: ${sumOfFive}.
  <hr />
  All multiples: <br />${multiples}`;
})();*/

/* Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

/*(function(){
  let fibbonaci = [0, 1];
  let num;
  let res = 0;
  let evenValues;
  let question = "By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.";

  while (res < 4000000) {
    num = fibbonaci[fibbonaci.length - 1] + fibbonaci[fibbonaci.length - 2];
    fibbonaci.push(num);
    evenValues = fibbonaci.filter(function(n){
      return n%2 === 0;
    });
    res = evenValues.reduce(function(a, b){
      return a + b;
    });
  }
  questionBox.innerHTML = `Question: ${question}`;
  resultBox.innerHTML = `Fibbonaci squence : ${fibbonaci}
  <hr />
  Even values in fibbonaci: ${evenValues}
  <hr />
  Sum of even values ${res}`;
})();*/
